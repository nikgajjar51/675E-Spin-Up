#include "main.h"
void programming_skills() {
  flywheel_pid(7000);
  tongue_pneum.set_value(true);
  chassis.set_drive_pid(5, drive_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(-6, drive_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_turn_pid(110, turn_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(25, drive_speed * normal_speed_multiplier);
  chassis.wait_drive();
  chassis.set_turn_pid(90, turn_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(12, drive_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(-8, drive_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_turn_pid(0, turn_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(-68, drive_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_turn_pid(8, turn_speed * high_speed_multiplier);
  chassis.wait_drive();
  index_count(1);
  pros::delay(250);
  index_count(1);
  pros::delay(250);
  index_count(1);
  pros::delay(250);
  chassis.set_turn_pid(0, turn_speed * high_speed_multiplier);
  chassis.wait_drive();
  intake_power(100);
  chassis.set_drive_pid(52, drive_speed * high_speed_multiplier);
  chassis.wait_drive();
  flywheel_async_pid_control(5500);
  intake_power(100);
  chassis.set_turn_pid(-135, turn_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(85, drive_speed * normal_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(-25, drive_speed * normal_speed_multiplier);
  chassis.wait_drive();
  chassis.set_turn_pid(-45, turn_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(-10, drive_speed * high_speed_multiplier);
  chassis.wait_drive();
  index_count(1);
  pros::delay(250);
  index_count(1);
  pros::delay(250);
  index_count(1);
  pros::delay(250);
  chassis.set_drive_pid(15, drive_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_turn_pid(-135, turn_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(45, drive_speed * normal_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(-10, drive_speed * normal_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(30, drive_speed * normal_speed_multiplier);
  chassis.wait_drive();
  chassis.set_turn_pid(-100, turn_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(-40, drive_speed * normal_speed_multiplier);
  chassis.wait_drive();
  index_count(1);
  pros::delay(250);
  index_count(1);
  pros::delay(250);
  index_count(1);
  pros::delay(250);
  chassis.set_drive_pid(40, drive_speed * normal_speed_multiplier);
  chassis.wait_drive();
  chassis.set_turn_pid(180, turn_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(5, drive_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(-6, drive_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_turn_pid(110, turn_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(25, drive_speed * normal_speed_multiplier);
  chassis.wait_drive();
  chassis.set_turn_pid(90, turn_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(12, drive_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_drive_pid(-8, drive_speed * high_speed_multiplier);
  chassis.wait_drive();
  chassis.set_turn_pid(0, turn_speed * high_speed_multiplier);
  chassis.wait_drive();
}
void backup_programming_skills() {}